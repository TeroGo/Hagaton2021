{"version":3,"sources":["Chart/Chart.js","InfoBox/InfoBox.js","Layout/Layout.js","App.js","reportWebVitals.js","index.js","Layout/Layout.module.css"],"names":["Chart","props","chartData","console","log","data","isThereData","Object","keys","length","x","y","summary","carbs","fat","protein","colorScale","radius","InfoBox","dataFromParent","text","ingredients","calories","content","getClassificationIcon","classification","Layout","React","useState","searchPhrase","setSearchPhrase","resultsLoaded","foodData","undefined","className","styles","left","htmlFor","id","value","onChange","event","currentTarget","onClick","getData","right","chart","style","fontSize","position","top","App","setFoodData","fetchData","a","fetch","response","json","food","alert","componentDidMount","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.15cbe877.chunk.js","sourcesContent":["import React from \"react\";\n//import styles from \"./Chart.module.css\";\nimport { VictoryPie } from \"victory-pie\";\n  \n\nconst Chart = (props) => {\n\n    console.log(props.data)\n    \n    var chartData;\n    var isThereData = (Object.keys(props.data).length !==0)\n    if(isThereData){\n      chartData = [\n        { x: \"Carb\", y: props.data?.summary.carbs},\n        { x: \"Fat\", y: props.data?.summary?.fat },\n        { x: \"Protein\", y: props.data?.summary?.protein }\n      ];\n    }\n   // empty if no data\n    return (\n      <div>\n          {isThereData && <VictoryPie\n            data={chartData}\n            colorScale={[\"skyblue\", \"teal\", \"maroon\", \"pink\"]}\n            radius={100}\n          />\n          }\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst InfoBox = (props) => {\n  console.log(props.dataFromParent);\n\n  const content = () => {\n    if (!props.dataFromParent?.ingredients) return \"\";\n    return props.dataFromParent.ingredients[0].calories;\n  };\n\n  const text = content() || \"apina\";\n\n  return (\n    <div>\n      <p>100g annos vastaa noin:</p>\n      <ul>\n        <li>125 sokeripalaa tai</li>\n        <li>0.00005 grammaa uraania</li>\n      </ul>\n\n      {text}\n    </div>\n  );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport InfoBox from \"../InfoBox/InfoBox\";\nimport styles from \"./Layout.module.css\";\n\nconst message = \"kissa\";\n\nfunction getClassificationIcon(classification) {\n  switch (classification) {\n    case 'CHICKEN':\n      return '🍗';\n\n    case 'BEEF':\n      return '🥩';\n\n    case 'PORK':\n      return '🐷';\n\n    case 'VEGETARIAN':\n      return '🥕';\n\n    case 'SALMON':\n      return '🍣';\n\n    case 'SHELLFISH':\n      return '🦐';\n\n    case 'WHITE_FISH':\n      return '🐟';\n\n    default:\n      return classification;\n  }\n}\n\nconst Layout = (props) => {\n  const [searchPhrase, setSearchPhrase] = React.useState(\"\");\n  const resultsLoaded = props.foodData && (props.foodData.summary !== undefined);\n\n  return (\n    <main>\n      <section className={styles.left}>\n        <label htmlFor=\"foodInput\">Enter lunch description</label>\n        <textarea\n          id=\"foodInput\"\n          value={searchPhrase}\n          onChange={(event) => setSearchPhrase(event.currentTarget.value)}\n        ></textarea>\n        <div>\n          <button\n            onClick={() => {\n              props.getData(searchPhrase);\n            }}\n          >\n            Haistele raaka-aineet\n          </button>\n        </div>\n      </section>\n\n      <section className={styles.right}>\n        <div className={styles.chart}>\n          {resultsLoaded && (\n            <>\n              <div style={{ fontSize: '256px', position: 'absolute', top: '0' }}>\n                {getClassificationIcon(props.foodData.summary.classification)}\n              </div>              \n            </>\n          )}\n          <Chart data={props.foodData} />\n          <InfoBox dataFromParent={props.foodData} />\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./App.css\";\nimport Layout from \"./Layout/Layout\";\n\nexport const chartData = [\n  { x: \"Calories\", y: 900 },\n  { x: \"Group Carb\", y: 400 },\n  { x: \"Fat\", y: 100 },\n  { x: \"Protein\", y: 300 },\n];\n\nfunction App() {\n  const [foodData, setFoodData] = React.useState({});\n\n  async function fetchData(searchPhrase) {\n    console.log(searchPhrase);\n    try {\n      const response = await fetch(\n        `https://lunchmaster2k.herokuapp.com/api?text=${searchPhrase}`\n      );\n      const food = await response.json();\n      setFoodData(food);\n      console.log(food);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  React.componentDidMount = () => {\n    fetchData();\n  };\n\n  const testData = {};\n\n  return (\n    <div className=\"App\">\n      <Layout foodData={foodData} getData={fetchData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"Layout_left__1GwK3\",\"right\":\"Layout_right__leC12\",\"chart\":\"Layout_chart__1TFcT\"};"],"sourceRoot":""}